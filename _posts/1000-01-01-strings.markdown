---
title: Strings
layout: post
date: 1000-01-01
permalink: strings
---

In Ruby, a String is a series of characters between quotation marks:

```rb
"here is a string"
"1234567"
"**** this is another string ****"
```

## Our First Program

Let's write a program where we we print strings. First, we'll need to make a file and save it as `strings.rb`.

```rb
print "here is a string"
print "1234567"
print "**** this is another string ****"
```

To run this program, type `ruby strings.rb` from the command line.

Using print does not add a line between each string. If we want to do that, we can use puts:

```rb
puts "here is a string"
puts "1234567"
puts "**** this is another string ****"
```

## Try It: Printing Strings

Write a program that prints out your name, location, and email address each separated by a line of dashes.

```
Rachel Warbelow
---------------
Denver, CO
---------------
rachel@turing.io
```

## Assigning Strings to Variables

We can save strings to variables:

```rb
email = "rachel@turing.io"
address = "123 Apple Street, Denver, CO 80202"
first_name = "Rachel"
```

Notice that these variables start with a lower case letter and can include underscores (_).

We can print these variables:

```rb
email = "rachel@turing.io"
address = "123 Apple Street, Denver, CO 80202"
first_name = "Rachel"

puts first_name
puts address
puts message
```

Even better, we can use string interpolation to combine:

```rb
email = "rachel@turing.io"
address = "123 Apple Street, Denver, CO 80202"
first_name = "Rachel"

puts "#{first_name} lives at #{address}. Her email address is #{email}."
```

## Try It: Interpolating Strings

Write a program that assigns variables pet_name, food, and toy. Interpolate those variables into a string to output something like this:

```
Fluffy plays with stuffed mice after eating tuna fish.
```
